%!PS-AdobeFont-1.0: Belgika-Stroke 001.000
%%Title: Belgika-Stroke
%Version: 001.000
%%CreationDate: Wed Mar  4 10:05:39 2015
%%Creator: Ludi,,,
%Copyright: Copyright (c) 2014-2015, Pierre Huyghebaert
%Copyright:  
%Copyright:  OSP: Version 1.0 (http://ospublish.constantvzw.org/foundry)
%Copyright:  
%Copyright:  Belgica and Belgika fonts are released under the OFL 1.1 --
%Copyright:  http://scripts.sil.org/OFL
%Copyright:  
%Copyright:  For information on what you're allowed to change or modify,
%Copyright:  
%Copyright:  consult the OFL-1.1.txt and OFL-FAQ.txt files.  The OFL-FAQ
%Copyright:  also gives a very general rationale and various
%Copyright:  recommendations regarding why you would want to contribute
%Copyright:  to the project or make your own version of the font.
% 2014-12-26: Created with FontForge (http://fontforge.org)
% Generated by FontForge 20150125 (http://fontforge.sf.net/)
%%EndComments

12 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /Belgika-Stroke def
/FontBBox {-11170 -11200 11787 12000 }readonly def
/PaintType 2 def
/StrokeWidth 50 def
/FontInfo 10 dict dup begin
 /version (001.000) readonly def
 /Notice (Copyright \050c\051 2014-2015, Pierre Huyghebaert\012\012OSP: Version 1.0 \050http://ospublish.constantvzw.org/foundry\051\012\012Belgica and Belgika fonts are released under the OFL 1.1 -- http://scripts.sil.org/OFL\012\012For information on what you're allowed to change or modify, \012consult the OFL-1.1.txt and OFL-FAQ.txt files.  The OFL-FAQ also gives a very general rationale and various recommendations regarding why you would want to contribute to the project or make your own version of the font.) readonly def
% Copyright (c) 2014-2015, Pierre Huyghebaert
% 
% OSP: Version 1.0 (http://ospublish.constantvzw.org/foundry)
% 
% Belgica and Belgika fonts are released under the OFL 1.1 -- http://scripts.sil.org/OFL
% 
% For information on what you're allowed to change or modify, 
% consult the OFL-1.1.txt and OFL-FAQ.txt files.  The OFL-FAQ also gives a very general rationale and various recommendations regarding why you would want to contribute to the project or make your own version of the font.
 /FullName (Belgika Stroke) readonly def
 /FamilyName (Belgika) readonly def
 /Weight (Stroke) readonly def
 /FSType 0 def
 /ItalicAngle 0 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 32/space put
dup 33/exclam put
dup 34/quotedbl put
dup 35/numbersign put
dup 36/dollar put
dup 37/percent put
dup 38/ampersand put
dup 39/quotesingle put
dup 40/parenleft put
dup 41/parenright put
dup 42/asterisk put
dup 43/plus put
dup 44/comma put
dup 45/hyphen put
dup 46/period put
dup 47/slash put
dup 48/zero put
dup 49/one put
dup 50/two put
dup 51/three put
dup 52/four put
dup 53/five put
dup 54/six put
dup 55/seven put
dup 56/eight put
dup 57/nine put
dup 58/colon put
dup 59/semicolon put
dup 60/less put
dup 61/equal put
dup 62/greater put
dup 63/question put
dup 64/at put
dup 65/A put
dup 66/B put
dup 67/C put
dup 68/D put
dup 69/E put
dup 70/F put
dup 71/G put
dup 72/H put
dup 73/I put
dup 74/J put
dup 75/K put
dup 76/L put
dup 77/M put
dup 78/N put
dup 79/O put
dup 80/P put
dup 81/Q put
dup 82/R put
dup 83/S put
dup 84/T put
dup 85/U put
dup 86/V put
dup 87/W put
dup 88/X put
dup 89/Y put
dup 90/Z put
dup 91/bracketleft put
dup 92/backslash put
dup 93/bracketright put
dup 94/asciicircum put
dup 95/underscore put
dup 96/grave put
dup 97/a put
dup 98/b put
dup 99/c put
dup 100/d put
dup 101/e put
dup 102/f put
dup 103/g put
dup 104/h put
dup 105/i put
dup 106/j put
dup 107/k put
dup 108/l put
dup 109/m put
dup 110/n put
dup 111/o put
dup 112/p put
dup 113/q put
dup 114/r put
dup 115/s put
dup 116/t put
dup 117/u put
dup 118/v put
dup 119/w put
dup 120/x put
dup 121/y put
dup 122/z put
dup 123/braceleft put
dup 124/bar put
dup 125/braceright put
dup 126/asciitilde put
dup 127/uni007F put
dup 128/uni0080 put
dup 129/uni0081 put
dup 130/uni0082 put
dup 131/uni0083 put
dup 132/uni0084 put
dup 133/uni0085 put
dup 134/uni0086 put
dup 135/uni0087 put
dup 136/uni0088 put
dup 137/uni0089 put
dup 138/uni008A put
dup 139/uni008B put
dup 140/uni008C put
dup 141/uni008D put
dup 142/uni008E put
dup 143/uni008F put
dup 144/uni0090 put
dup 145/uni0091 put
dup 146/uni0092 put
dup 147/uni0093 put
dup 148/uni0094 put
dup 149/uni0095 put
dup 150/uni0096 put
dup 151/uni0097 put
dup 152/uni0098 put
dup 153/uni0099 put
dup 154/uni009A put
dup 155/uni009B put
dup 156/uni009C put
dup 157/uni009D put
dup 158/uni009E put
dup 159/uni009F put
dup 160/uni00A0 put
dup 161/exclamdown put
dup 162/cent put
dup 163/sterling put
dup 164/currency put
dup 165/yen put
dup 166/brokenbar put
dup 167/section put
dup 168/dieresis put
dup 169/copyright put
dup 170/ordfeminine put
dup 171/guillemotleft put
dup 172/logicalnot put
dup 173/uni00AD put
dup 174/registered put
dup 175/macron put
dup 176/degree put
dup 177/plusminus put
dup 178/uni00B2 put
dup 179/uni00B3 put
dup 180/acute put
dup 181/mu put
dup 182/paragraph put
dup 183/periodcentered put
dup 184/cedilla put
dup 185/uni00B9 put
dup 186/ordmasculine put
dup 187/guillemotright put
dup 188/onequarter put
dup 189/onehalf put
dup 190/threequarters put
dup 191/questiondown put
dup 192/Agrave put
dup 193/Aacute put
dup 194/Acircumflex put
dup 195/Atilde put
dup 196/Adieresis put
dup 197/Aring put
dup 198/AE put
dup 199/Ccedilla put
dup 200/Egrave put
dup 201/Eacute put
dup 202/Ecircumflex put
dup 203/Edieresis put
dup 204/Igrave put
dup 205/Iacute put
dup 206/Icircumflex put
dup 207/Idieresis put
dup 208/Eth put
dup 209/Ntilde put
dup 210/Ograve put
dup 211/Oacute put
dup 212/Ocircumflex put
dup 213/Otilde put
dup 214/Odieresis put
dup 215/multiply put
dup 216/Oslash put
dup 217/Ugrave put
dup 218/Uacute put
dup 219/Ucircumflex put
dup 220/Udieresis put
dup 221/Yacute put
dup 222/Thorn put
dup 223/germandbls put
dup 224/agrave put
dup 225/aacute put
dup 226/acircumflex put
dup 227/atilde put
dup 228/adieresis put
dup 229/aring put
dup 230/ae put
dup 231/ccedilla put
dup 232/egrave put
dup 233/eacute put
dup 234/ecircumflex put
dup 235/edieresis put
dup 236/igrave put
dup 237/iacute put
dup 238/icircumflex put
dup 239/idieresis put
dup 240/eth put
dup 241/ntilde put
dup 242/ograve put
dup 243/oacute put
dup 244/ocircumflex put
dup 245/otilde put
dup 246/odieresis put
dup 247/divide put
dup 248/oslash put
dup 249/ugrave put
dup 250/uacute put
dup 251/ucircumflex put
dup 252/udieresis put
dup 253/yacute put
dup 254/thorn put
dup 255/ydieresis put
readonly def
/BuildChar { 1 index /Encoding get exch get 1 index /BuildGlyph get exec } bind def
% I call all my CharProcs with two arguments, the top of the stack will be
%  0 and then next thing is the fontdict. If the tos is zero the char will
%  do a setcachedevice, otherwise (for referenced chars) it will not. The
%  fontdict argument is so a char can invoke a referenced char. BuildGlyph
%  itself will remove the arguments from the stack, the CharProc will leave 'em
/BuildGlyph { 2 copy exch /CharProcs get exch 2 copy known not { pop /.notdef} if get exch pop 0 exch exec pop pop 50 setlinewidth stroke} bind def
/CharProcs 225 dict def
CharProcs begin
  /.notdef { 1000 0 0 0 0 0 setcachedevice } bind def
  /A { dup -1 ne { 617 0 -20 -50 637 850 setcachedevice } if
	587 0 moveto
	 478 312 308 800 308 800 curveto
	308 800 moveto
	 30 0 lineto
	125 272 moveto
	 492 272 lineto
  } bind def
  /B { dup -1 ne { 640 0 59 -50 641 850 setcachedevice } if
	109.993 480 moveto
	 351.993 480 lineto
	 484.993 479 591.001 371 589.993 238 curveto
	 588.993 106 481.993 0 349.993 0 curveto
	 109.993 1 lineto
	 109.993 800 lineto
	 270.993 800 lineto
	 358.993 799 431.005 727 429.993 638 curveto
	 428.993 550 357.993 479 269.993 479 curveto
  } bind def
  /C { dup -1 ne { 707 0 40 -50 687 850 setcachedevice } if
	637 94 moveto
	 579 36 500 0 411 0 curveto
	 234 0 90 143 90 320 curveto
	 90 480 lineto
	 90 657 234 800 411 800 curveto
	 500 800 579 764 637 706 curveto
  } bind def
  /D { dup -1 ne { 779 0 60 -50 759 850 setcachedevice } if
	110 0 moveto
	 110 800 lineto
	 310 800 lineto
	 412 800 514 761 592 683 curveto
	 748 527 748 273 592 117 curveto
	 514 39 410 0 309 0 curveto
	 110 0 lineto
	closepath
  } bind def
  /E { dup -1 ne { 610 0 60 -50 600 850 setcachedevice } if
	110 400 moveto
	 470 400 lineto
	110 400 moveto
	 470 400 lineto
	550 800 moveto
	 110 800 lineto
	 110 0 lineto
	 550 0 lineto
  } bind def
  /F { dup -1 ne { 560 0 60 -50 600 850 setcachedevice } if
	110 400 moveto
	 470 400 lineto
	550 800 moveto
	 110 800 lineto
	 110 0 lineto
  } bind def
  /G { dup -1 ne { 843 0 20 -50 803 850 setcachedevice } if
	532 375 moveto
	 753 375 lineto
	 753 117 lineto
	 675 39 572 0 470 0 curveto
	 368 0 265 39 187 117 curveto
	 109 195 70 298 70 400 curveto
	 70 502 109 605 187 683 curveto
	 265 761 367 800 469 800 curveto
	 571 800 674 762 752 684 curveto
  } bind def
  /H { dup -1 ne { 700 0 60 -50 640 850 setcachedevice } if
	110 400 moveto
	 588 400 lineto
	590 0 moveto
	 590 800 lineto
	110 0 moveto
	 110 800 lineto
  } bind def
  /I { dup -1 ne { 244 0 72 -50 172 850 setcachedevice } if
	122 800 moveto
	 122 0 lineto
  } bind def
  /J { dup -1 ne { 431 0 -20 -50 391 850 setcachedevice } if
	30 97 moveto
	 38 78 50 61 65 47 curveto
	 94 18 135 0 179 0 curveto
	 269 0 341 72 341 162 curveto
	 341 800 lineto
  } bind def
  /K { dup -1 ne { 620 0 60 -50 620 850 setcachedevice } if
	110 800 moveto
	 110 0 lineto
	570 800 moveto
	 166 400 lineto
	 570 0 lineto
  } bind def
  /L { dup -1 ne { 620 0 60 -50 640 850 setcachedevice } if
	110 800 moveto
	 110 0 lineto
	 590 0 lineto
  } bind def
  /M { dup -1 ne { 1022 0 60 -50 962 850 setcachedevice } if
	912 800 moveto
	 512 0 lineto
	110 800 moveto
	 512 0 lineto
	110 800 moveto
	110 800 moveto
	 110 0 lineto
	912 800 moveto
	 912 0 lineto
  } bind def
  /N { dup -1 ne { 780 0 60 -50 720 850 setcachedevice } if
	110 800 moveto
	 670 0 lineto
	110 0 moveto
	 110 800 lineto
	670 800 moveto
	 670 0 lineto
  } bind def
  /O { dup -1 ne { 940 0 20 -50 920 850 setcachedevice } if
	470 0 moveto
	 249 0 70 179 70 400 curveto
	 70 621 249 800 470 800 curveto
	 691 800 870 621 870 400 curveto
	 870 179 691 0 470 0 curveto
	closepath
  } bind def
  /P { dup -1 ne { 638 0 60 -50 639 850 setcachedevice } if
	110 320 moveto
	 348 320 lineto
	 480 320 587.008 426 588 558 curveto
	 589 691 483 799 350 800 curveto
	 110 800 lineto
	 110 0 lineto
  } bind def
  /Q { dup -1 ne { 944 0 20 -50 924 850 setcachedevice } if
	472 0 moveto
	 693 0 874 179 874 400 curveto
	 874 621 693 800 472 800 curveto
	 251 800 70 621 70 400 curveto
	 70 179 251 0 472 0 curveto
	closepath
	638 234 moveto
	 872 0 lineto
  } bind def
  /R { dup -1 ne { 580 0 59 -50 560 850 setcachedevice } if
	489.991 0 moveto
	 288.991 400 lineto
	109.991 0 moveto
	 109.991 800 lineto
	 311.991 800 lineto
	 422.991 800 511 709 509.991 598 curveto
	 508.991 488 419.991 400 309.991 400 curveto
	 109.991 400 lineto
  } bind def
  /S { dup -1 ne { 520 0 20 -50 500 850 setcachedevice } if
	70 121 moveto
	 80 97 94 76 112 58 curveto
	 148 22 198 0 253 0 curveto
	 362 0 450 89 450 198 curveto
	 450 252 429.769 309.057 379 346 curveto
	 155 509 lineto
	 118 536 88 593 88 638 curveto
	 88 727 160 800 250 800 curveto
	 294 800 335 782 364 753 curveto
	 379 739 391 722 399 703 curveto
  } bind def
  /T { dup -1 ne { 620 0 -60 -50 680 850 setcachedevice } if
	310 0 moveto
	 310 800 lineto
	-10 800 moveto
	 630 800 lineto
  } bind def
  /U { dup -1 ne { 820 0 40 -50 780 850 setcachedevice } if
	730 800 moveto
	 730 320 lineto
	 730 143 587 0 410 0 curveto
	 233 0 90 143.103 90 320 curveto
	 90 800 lineto
  } bind def
  /V { dup -1 ne { 660 0 -20 -50 680 850 setcachedevice } if
	30 800 moveto
	 330 0 lineto
	 630 800 lineto
  } bind def
  /W { dup -1 ne { 1034 0 -20 -50 1054 850 setcachedevice } if
	273 0 moveto
	 517 800 lineto
	30 800 moveto
	 273 0 lineto
	760 0 moveto
	 1004 800 lineto
	517 800 moveto
	 760 0 lineto
  } bind def
  /X { dup -1 ne { 708 0 40 -50 668 850 setcachedevice } if
	90 800 moveto
	 618 0 lineto
	90 0 moveto
	 618 800 lineto
  } bind def
  /Y { dup -1 ne { 639 0 -20 -50 659 850 setcachedevice } if
	319 0 moveto
	 319 400 lineto
	30 800 moveto
	 319 400 lineto
	 609 800 lineto
  } bind def
  /Z { dup -1 ne { 660 0 40 -50 620 850 setcachedevice } if
	570 800 moveto
	 90 0 lineto
	 570 0 lineto
	90 800 moveto
	 570 800 lineto
  } bind def
  /one { 550 0 105 -50 385 850 setcachedevice
	335 0 moveto
	 335 800 lineto
	335 800 moveto
	 334 702 254 622 155 622 curveto
  } bind def
  /two { 550 0 26 -50 516 850 setcachedevice
	128 703 moveto
	 136 722 148 739 163 753 curveto
	 192 782 232 800 276 800 curveto
	 365 800 439 728 439 638 curveto
	 439 616 431 590 419 567 curveto
	 76 0 lineto
	 466 0 lineto
  } bind def
  /three { 550 0 5 -50 545 850 setcachedevice
	92 622 moveto
	 93 720 173 800 272 800 curveto
	 371 800 452 719 452 620 curveto
	 452 521 372.005 439 272 439 curveto
	272 439 moveto
	 393.037 439 495 338 495 218 curveto
	 495 97 396 0 275 0 curveto
	 153 0 55 97 55 218 curveto
  } bind def
  /four { 550 0 -34 -50 575 850 setcachedevice
	376 800 moveto
	 16 228 lineto
	 525 228 lineto
	376 0 moveto
	 376 800 lineto
  } bind def
  /five { 550 0 -3 -50 552 850 setcachedevice
	117 800 moveto
	 117 475 lineto
	438 800 moveto
	 117 800 lineto
	47 145 moveto
	 83 60 167 0 265 0 curveto
	 396 0 502 106 502 237 curveto
	 502 367 398 472 268 475 curveto
	 117 475 lineto
  } bind def
  /six { 550 0 -13 -50 563 850 setcachedevice
	488 667 moveto
	 449 746 369 800 275 800 curveto
	 144 800 37 693 37 562 curveto
	 37 237 lineto
	 37 106 144 0 275 0 curveto
	 406 0 513 106 513 237 curveto
	 513 368 406 475 275 475 curveto
	 144 475 37 368 37 237 curveto
	37 562 moveto
  } bind def
  /seven { 550 0 -15 -50 565 850 setcachedevice
	515 800 moveto
	 195 0 lineto
	35 800 moveto
	 515 800 lineto
  } bind def
  /eight { 550 0 -13 -50 563 850 setcachedevice
	513 238 moveto
	 513 107 406 0 275 0 curveto
	 144 0 37 107 37 238 curveto
	 37 369 144 476 275 476 curveto
	 406 476 513 369 513 238 curveto
	closepath
	437 638 moveto
	 437 549 364 476 275 476 curveto
	 186 476 113 549 113 638 curveto
	 113 727 186 800 275 800 curveto
	 364 800 437 727 437 638 curveto
	closepath
  } bind def
  /nine { 550 0 -13 -50 563 850 setcachedevice
	61 133 moveto
	 100 54 181 0 275 0 curveto
	 406 0 513 106 513 237 curveto
	513 562 moveto
	 513 431 406 324 275 324 curveto
	 144 324 37 431 37 562 curveto
	 37 693 144 800 275 800 curveto
	 406 800 513 693 513 562 curveto
	 513 237 lineto
  } bind def
  /zero { 550 0 4 -50 546 851 setcachedevice
	54.1992 579.24 moveto
	 54.1992 220.8 lineto
	 54.1992 98.6699 152.871 0 275 0 curveto
	 397.131 0 495.801 98.6699 495.801 220.8 curveto
	 495.801 579.24 lineto
	 495.801 701.37 397.131 800.04 275 800.04 curveto
	 152.871 800.04 54.1992 701.37 54.1992 579.24 curveto
	closepath
  } bind def
  /period { 222 0 0 0 0 0 setcachedevice
	110 0 moveto
	 110 0 lineto
	closepath
  } bind def
  /colon { 220 0 0 0 0 0 setcachedevice
	110 0 moveto
	 110 0 lineto
	closepath
	110 434 moveto
	 110 434 lineto
	closepath
  } bind def
  /comma { dup -1 ne { 220 0 60 -201 160 50 setcachedevice } if
	110 -151 moveto
	 110 0 lineto
  } bind def
  /hyphen { dup -1 ne { 483 0 60 278 423 378 setcachedevice } if
	110 328 moveto
	 373 328 lineto
  } bind def
  /exclam { dup -1 ne { 220 0 60 138 160 850 setcachedevice } if
	110 188 moveto
	 110 800 lineto
	110 0 moveto
	 110 0 lineto
	closepath
  } bind def
  /question { dup -1 ne { 531 0 80 139 491 850 setcachedevice } if
	130 702 moveto
	 138 721 150 739 165 753 curveto
	 194 782 235 800 279 800 curveto
	 369 800 441 727 441 638 curveto
	 441 616 433 590 421 567 curveto
	 296 358 lineto
	 256.651 292.209 249 244 249 189 curveto
	249 1 moveto
	 249 1 lineto
	closepath
  } bind def
  /parenleft { 293 0 60 -50 233 850 setcachedevice
	183 800 moveto
	 136 676 110 541 110 401 curveto
	 110 261 135 123 182 0 curveto
  } bind def
  /parenright { 293 0 60 -50 233 850 setcachedevice
	110 800 moveto
	 157 676 183 540 183 400 curveto
	 183 260 157 123 110 0 curveto
  } bind def
  /space { 400 0 0 0 0 0 setcachedevice
  } bind def
  /slash { 475 0 60 -50 415 850 setcachedevice
	365 800 moveto
	 110 0 lineto
  } bind def
  /plus { dup -1 ne { 483 0 60 146 423 510 setcachedevice } if
	373 328 moveto
	 110 328 lineto
	241.5 196.5 moveto
	 241.5 459.5 lineto
  } bind def
  /asterisk { 447 0 60 487 388 850 setcachedevice
	337.766 734.25 moveto
	 110 602.75 lineto
	337.766 734.25 moveto
	 110 602.75 lineto
	337.766 602.75 moveto
	 110 734.25 lineto
	337.766 602.75 moveto
	 110 734.25 lineto
	223.883 537 moveto
	 223.883 800 lineto
	223.883 537 moveto
	 223.883 800 lineto
  } bind def
  /quotedbl { 384 0 60 599 324 850 setcachedevice
    pop -1
    164 800 translate 1 index /CharProcs get /comma get exec -164 -800 translate
    0 800 translate 1 index /CharProcs get /comma get exec 0 -800 translate
  } bind def
  /quotesingle { 220 0 60 599 160 850 setcachedevice
    pop -1
    0 800 translate 1 index /CharProcs get /comma get exec 0 -800 translate
  } bind def
  /numbersign { 794 0 60 -50 734 850 setcachedevice
	187 485 moveto
	 684 485 lineto
	110 263 moveto
	 617 263 lineto
	677.5 800 moveto
	 422.5 0 lineto
	397.5 800 moveto
	 142.5 0 lineto
  } bind def
  /dollar { 600 0 60 -121 540 920 setcachedevice
	293 -1 moveto
	 293 -71 lineto
	290 870 moveto
	 290 800 lineto
	110 120 moveto
	 120 96 134 75 152 57 curveto
	 188 21 238 -1 293 -1 curveto
	 402 -1 490 88 490 197 curveto
	 490 251 469 308 419 346 curveto
	 195 509 lineto
	 158 536 128 593 128 638 curveto
	 128 727 200 800 290 800 curveto
	 334 800 375 782 404 753 curveto
	 419 739 431 722 439 703 curveto
  } bind def
  /percent { 740 0 60 -50 680 850 setcachedevice
	370 130 moveto
	 370 202 428 260 500 260 curveto
	 572 260 630 202 630 130 curveto
	 630 58 572 0 500 0 curveto
	 428 0 370 58 370 130 curveto
	closepath
	110 670 moveto
	 110 742 168 800 240 800 curveto
	 312 800 370 742 370 670 curveto
	 370 598 312 540 240 540 curveto
	 168 540 110 598 110 670 curveto
	closepath
	630 800 moveto
	 110 0 lineto
  } bind def
  /ampersand { 803 0 90 -51 773 850 setcachedevice
	723 67 moveto
	 245 509 lineto
	 211.482 539.994 178 593 178 638 curveto
	 178 727 250 800 340 800 curveto
	 430 800 502 727 502 638 curveto
	 502 593 472 536 435 509 curveto
	 211 346 lineto
	 161 308 140 251 140 197 curveto
	 140 88 228 -1 337 -1 curveto
	 392 -1 431 11.5762 467 47 curveto
	 491.374 56 717 293 717 293 curveto
  } bind def
  /semicolon { 220 0 57 -201 157 50 setcachedevice
	110 434 moveto
    pop -1
    -3 0 translate 1 index /CharProcs get /comma get exec 3 0 translate
  } bind def
  /at { 1020 0 60 -50 961 850 setcachedevice
	663.644 366.72 moveto
	 661.62 357.144 660.651 347.629 660.651 338.341 curveto
	 660.651 287.033 705.48 230.507 753.744 220.05 curveto
	 760.034 218.688 766.323 218.03 772.557 218.03 curveto
	 822.803 218.03 888.499 253.835 901.844 317 curveto
	 907.587 344.566 910.35 372.068 910.35 399.168 curveto
	 910.35 584.408 781.277 750.871 592.844 791 curveto
	 564.795 796.974 536.813 799.844 509.254 799.844 curveto
	 324.584 799.844 158.871 670.951 118.844 483 curveto
	 112.871 454.951 110 426.969 110 399.409 curveto
	 110 214.74 238.894 49.0264 426.844 9 curveto
	 454.737 3.16797 482.566 0.357422 509.988 0.357422 curveto
	 573.073 0.357422 634.007 15.2305 688.618 42.3945 curveto
	473.563 232.96 moveto
	 399.977 248.892 349.933 317.144 349.933 394.866 curveto
	 349.933 407.3 351.214 419.977 353.884 432.72 curveto
	 370.85 513.693 438.501 568.986 512.421 568.986 curveto
	 522.853 568.986 533.408 567.886 543.964 565.6 curveto
	 617.552 549.669 667.595 482.071 667.595 404.528 curveto
	 667.595 392.123 666.313 379.464 663.644 366.72 curveto
	 646.652 285.625 578.823 229.61 504.774 229.61 curveto
	 494.451 229.61 484.008 230.699 473.563 232.96 curveto
	closepath
  } bind def
  /equal { 483 0 60 172 423 484 setcachedevice
	373 222 moveto
	 110 222 lineto
	373 434 moveto
	 110 434 lineto
  } bind def
  /less { 476 0 60 -52 416 484 setcachedevice
	366 -2 moveto
	 110 216 lineto
	 366 434 lineto
  } bind def
  /greater { 476 0 60 -52 416 484 setcachedevice
	110 -2 moveto
	 366 216 lineto
	 110 434 lineto
  } bind def
  /bracketleft { 293 0 60 -50 233 850 setcachedevice
	182 0 moveto
	 110 0 lineto
	 111 800 lineto
	 183 800 lineto
  } bind def
  /backslash { 476 0 60 -50 416 850 setcachedevice
	110 800 moveto
	 366 0 lineto
  } bind def
  /bracketright { 293 0 60 -50 233 850 setcachedevice
	111 0 moveto
	 183 0 lineto
	 182 800 lineto
	 110 800 lineto
  } bind def
  /asciicircum { dup -1 ne { 526 0 60 814 466 1022 setcachedevice } if
	110 864 moveto
	 263 971.1 lineto
	 416 864 lineto
  } bind def
  /a { 617 0 -20 -50 637 850 setcachedevice
    pop -1
    1 index /CharProcs get /A get exec
  } bind def
  /b { 640 0 59 -50 641 850 setcachedevice
    pop -1
    1 index /CharProcs get /B get exec
  } bind def
  /c { 707 0 40 -50 687 850 setcachedevice
    pop -1
    1 index /CharProcs get /C get exec
  } bind def
  /d { 779 0 60 -50 759 850 setcachedevice
    pop -1
    1 index /CharProcs get /D get exec
  } bind def
  /e { 610 0 60 -50 600 850 setcachedevice
    pop -1
    1 index /CharProcs get /E get exec
  } bind def
  /f { 560 0 60 -50 600 850 setcachedevice
    pop -1
    1 index /CharProcs get /F get exec
  } bind def
  /g { 843 0 20 -50 803 850 setcachedevice
    pop -1
    1 index /CharProcs get /G get exec
  } bind def
  /h { 700 0 60 -50 640 850 setcachedevice
    pop -1
    1 index /CharProcs get /H get exec
  } bind def
  /i { 244 0 72 -50 172 850 setcachedevice
    pop -1
    1 index /CharProcs get /I get exec
  } bind def
  /j { 431 0 -20 -50 391 850 setcachedevice
    pop -1
    1 index /CharProcs get /J get exec
  } bind def
  /k { 620 0 60 -50 620 850 setcachedevice
    pop -1
    1 index /CharProcs get /K get exec
  } bind def
  /l { 620 0 60 -50 640 850 setcachedevice
    pop -1
    1 index /CharProcs get /L get exec
  } bind def
  /m { 1022 0 60 -50 962 850 setcachedevice
    pop -1
    1 index /CharProcs get /M get exec
  } bind def
  /n { 780 0 60 -50 720 850 setcachedevice
    pop -1
    1 index /CharProcs get /N get exec
  } bind def
  /o { 940 0 20 -50 920 850 setcachedevice
    pop -1
    1 index /CharProcs get /O get exec
  } bind def
  /p { 638 0 60 -50 639 850 setcachedevice
    pop -1
    1 index /CharProcs get /P get exec
  } bind def
  /q { 944 0 20 -50 924 850 setcachedevice
    pop -1
    1 index /CharProcs get /Q get exec
  } bind def
  /r { 580 0 59 -50 560 850 setcachedevice
    pop -1
    1 index /CharProcs get /R get exec
  } bind def
  /s { 520 0 20 -50 500 850 setcachedevice
    pop -1
    1 index /CharProcs get /S get exec
  } bind def
  /t { 620 0 -60 -50 680 850 setcachedevice
    pop -1
    1 index /CharProcs get /T get exec
  } bind def
  /u { 820 0 40 -50 780 850 setcachedevice
    pop -1
    1 index /CharProcs get /U get exec
  } bind def
  /v { 660 0 -20 -50 680 850 setcachedevice
    pop -1
    1 index /CharProcs get /V get exec
  } bind def
  /w { 1034 0 -20 -50 1054 850 setcachedevice
    pop -1
    1 index /CharProcs get /W get exec
  } bind def
  /x { 708 0 40 -50 668 850 setcachedevice
    pop -1
    1 index /CharProcs get /X get exec
  } bind def
  /y { 639 0 -20 -50 659 850 setcachedevice
    pop -1
    1 index /CharProcs get /Y get exec
  } bind def
  /z { 660 0 40 -50 620 850 setcachedevice
    pop -1
    1 index /CharProcs get /Z get exec
  } bind def
  /underscore { 635 0 60 -250 575 -150 setcachedevice
	110 -200 moveto
	 525 -200 lineto
  } bind def
  /grave { dup -1 ne { 373 0 60 814 313 1022 setcachedevice } if
	110 971.1 moveto
	 263 864 lineto
  } bind def
  /bar { 220 0 60 -250 160 850 setcachedevice
	110 800 moveto
	 110 -200 lineto
  } bind def
  /braceleft { 394 0 60 -50 335 850 setcachedevice
	110 400 moveto
	 158.239 400 197.1 438.86 197.1 487.1 curveto
	 197.1 712.9 lineto
	 197.1 761.14 235.96 800 284.199 800 curveto
	284.199 0 moveto
	 235.96 0 197.1 38.8604 197.1 87.0996 curveto
	 197.1 312.9 lineto
	 197.1 361.14 158.239 400 110 400 curveto
  } bind def
  /braceright { 394 0 60 -50 334 850 setcachedevice
	284 400 moveto
	 236 400 197 439 197 487 curveto
	 197 713 lineto
	 197 761 158 800 110 800 curveto
	110 0 moveto
	 158 0 197 39 197 87 curveto
	 197 313 lineto
	 197 361 236 400 284 400 curveto
  } bind def
  /asciitilde { dup -1 ne { 466 0 60 288 407 440 setcachedevice } if
	356.074 364.021 moveto
	 339.104 347.05 316.83 338.564 294.556 338.564 curveto
	 272.281 338.564 250.008 347.05 233.037 364.021 curveto
	 216.066 380.991 193.793 389.477 171.519 389.477 curveto
	 149.244 389.477 126.971 380.991 110 364.021 curveto
  } bind def
  /acute { dup -1 ne { 372 0 60 814 312 1021 setcachedevice } if
	262 971 moveto
	 110 864 lineto
  } bind def
  /uni00A0 { 120 0 0 0 0 0 setcachedevice
  } bind def
  /exclamdown { 220 0 60 -50 160 662 setcachedevice
    pop -1
    [ -1 0 0 -1 220 800 ] concat 1 index /CharProcs get /exclam get exec [ -1 -0 -0 -1 220 800 ] concat 
  } bind def
  /questiondown { 531 0 60 -49 471 662 setcachedevice
    pop -1
    [ -1 0 0 -1 551 801 ] concat 1 index /CharProcs get /question get exec [ -1 -0 -0 -1 551 801 ] concat 
  } bind def
  /dieresis { dup -1 ne { 374 0 60 814 313 915 setcachedevice } if
	263 865 moveto
	 263 864 lineto
	110 865 moveto
	 110 864 lineto
	110 864 moveto
	 110 864 lineto
	closepath
  } bind def
  /guillemotleft { dup -1 ne { 576 0 60 -52 516 484 setcachedevice } if
	466 -2 moveto
	 300 216 lineto
	 466 434 lineto
	276 -2 moveto
	 110 216 lineto
	 276 434 lineto
  } bind def
  /guillemotright { 576 0 60 -52 516 484 setcachedevice
    pop -1
    [ -1 0 0 1 576 0 ] concat 1 index /CharProcs get /guillemotleft get exec [ -1 0 0 1 576 0 ] concat 
  } bind def
  /uni00AD { 483 0 60 278 423 378 setcachedevice
    pop -1
    1 index /CharProcs get /hyphen get exec
  } bind def
  /degree { 480 0 60 490 420 850 setcachedevice
	110 670 moveto
	 110 742 168 800 240 800 curveto
	 312 800 370 742 370 670 curveto
	 370 598 312 540 240 540 curveto
	 168 540 110 598 110 670 curveto
	closepath
  } bind def
  /periodcentered { 220 0 0 0 0 0 setcachedevice
	110 400 moveto
	 110 400 lineto
	closepath
  } bind def
  /cedilla { dup -1 ne { 220 0 60 -201 160 50 setcachedevice } if
	110 -151 moveto
	 110 0 lineto
  } bind def
  /Agrave { dup -1 ne { 617 0 -20 -50 637 1022 setcachedevice } if
    pop -1
    118 0 translate 1 index /CharProcs get /grave get exec -118 0 translate
    -0.000195313 0 translate 1 index /CharProcs get /A get exec 0.000195313 0 translate
  } bind def
  /Aacute { dup -1 ne { 617 0 -20 -50 637 1021 setcachedevice } if
    pop -1
    116 0 translate 1 index /CharProcs get /acute get exec -116 0 translate
    -0.000195313 0 translate 1 index /CharProcs get /A get exec 0.000195313 0 translate
  } bind def
  /Acircumflex { dup -1 ne { 617 0 -20 -50 637 1022 setcachedevice } if
    pop -1
    41.9998 0 translate 1 index /CharProcs get /asciicircum get exec -41.9998 0 translate
    -0.000195313 0 translate 1 index /CharProcs get /A get exec 0.000195313 0 translate
  } bind def
  /Atilde { dup -1 ne { 617 0 -20 -50 637 964 setcachedevice } if
    pop -1
    77.9998 524 translate 1 index /CharProcs get /asciitilde get exec -77.9998 -524 translate
    -0.000195313 0 translate 1 index /CharProcs get /A get exec 0.000195313 0 translate
  } bind def
  /Adieresis { dup -1 ne { 617 0 -20 -50 637 915 setcachedevice } if
    pop -1
    117 0 translate 1 index /CharProcs get /dieresis get exec -117 0 translate
    -0.000195313 0 translate 1 index /CharProcs get /A get exec 0.000195313 0 translate
  } bind def
  /Aring { dup -1 ne { 617 0 -20 -50 637 1108 setcachedevice } if
	180 928 moveto
	 180 1000 238 1058 310 1058 curveto
	 382 1058 440 1000 440 928 curveto
	 440 856 382 798 310 798 curveto
	 238 798 180 856 180 928 curveto
	closepath
    pop -1
    -0.000195313 0 translate 1 index /CharProcs get /A get exec 0.000195313 0 translate
  } bind def
  /Ccedilla { dup -1 ne { 707 0 40 -201 687 850 setcachedevice } if
    pop -1
    301 0 translate 1 index /CharProcs get /cedilla get exec -301 0 translate
    1 index /CharProcs get /C get exec
  } bind def
  /Egrave { dup -1 ne { 610 0 60 -50 600 1022 setcachedevice } if
    pop -1
    141.75 0 translate 1 index /CharProcs get /grave get exec -141.75 0 translate
    0.000390625 0 translate 1 index /CharProcs get /E get exec -0.000390625 0 translate
  } bind def
  /Eacute { dup -1 ne { 610 0 60 -50 600 1021 setcachedevice } if
    pop -1
    152.75 0 translate 1 index /CharProcs get /acute get exec -152.75 0 translate
    0.000390625 0 translate 1 index /CharProcs get /E get exec -0.000390625 0 translate
  } bind def
  /Ecircumflex { dup -1 ne { 610 0 60 -50 600 1022 setcachedevice } if
    pop -1
    72.7504 0 translate 1 index /CharProcs get /asciicircum get exec -72.7504 0 translate
    0.000390625 0 translate 1 index /CharProcs get /E get exec -0.000390625 0 translate
  } bind def
  /Edieresis { dup -1 ne { 610 0 60 -50 600 913 setcachedevice } if
    pop -1
    142.75 -2.00003 translate 1 index /CharProcs get /dieresis get exec -142.75 2.00003 translate
    -0.000195312 0 translate 1 index /CharProcs get /E get exec 0.000195312 0 translate
  } bind def
  /Igrave { dup -1 ne { 244 0 -5 -50 249 1022 setcachedevice } if
    pop -1
    -64.5002 0 translate 1 index /CharProcs get /grave get exec 64.5002 0 translate
    1.4998 0 translate 1 index /CharProcs get /I get exec -1.4998 0 translate
  } bind def
  /Iacute { dup -1 ne { 244 0 -4 -50 248 1021 setcachedevice } if
    pop -1
    -63.9996 0 translate 1 index /CharProcs get /acute get exec 63.9996 0 translate
    4.00039 0 translate 1 index /CharProcs get /I get exec -4.00039 0 translate
  } bind def
  /Icircumflex { dup -1 ne { 244 0 -81 -50 325 1022 setcachedevice } if
    pop -1
    -141 0 translate 1 index /CharProcs get /asciicircum get exec 141 0 translate
    -3.00029 0 translate 1 index /CharProcs get /I get exec 3.00029 0 translate
  } bind def
  /Idieresis { dup -1 ne { 244 0 -5 -50 248 917 setcachedevice } if
    pop -1
    -64.9998 1.99997 translate 1 index /CharProcs get /dieresis get exec 64.9998 -1.99997 translate
    11.0002 0 translate 1 index /CharProcs get /I get exec -11.0002 0 translate
  } bind def
  /Ntilde { dup -1 ne { 780 0 60 -50 720 964 setcachedevice } if
    pop -1
    156.75 524 translate 1 index /CharProcs get /asciitilde get exec -156.75 -524 translate
    0.000390625 0 translate 1 index /CharProcs get /N get exec -0.000390625 0 translate
  } bind def
  /Ograve { dup -1 ne { 940 0 20 -50 920 1022 setcachedevice } if
    pop -1
    282 0 translate 1 index /CharProcs get /grave get exec -282 0 translate
    -9.76563e-05 0 translate 1 index /CharProcs get /O get exec 9.76563e-05 0 translate
  } bind def
  /Oacute { dup -1 ne { 940 0 20 -50 920 1021 setcachedevice } if
    pop -1
    280 0 translate 1 index /CharProcs get /acute get exec -280 0 translate
    -9.76563e-05 0 translate 1 index /CharProcs get /O get exec 9.76563e-05 0 translate
  } bind def
  /Ocircumflex { dup -1 ne { 940 0 20 -50 920 1022 setcachedevice } if
    pop -1
    208 0 translate 1 index /CharProcs get /asciicircum get exec -208 0 translate
    -9.76563e-05 0 translate 1 index /CharProcs get /O get exec 9.76563e-05 0 translate
  } bind def
  /Otilde { dup -1 ne { 940 0 20 -50 920 964 setcachedevice } if
    pop -1
    240 524 translate 1 index /CharProcs get /asciitilde get exec -240 -524 translate
    -9.76563e-05 0 translate 1 index /CharProcs get /O get exec 9.76563e-05 0 translate
  } bind def
  /Odieresis { dup -1 ne { 940 0 20 -50 920 915 setcachedevice } if
    pop -1
    280 0 translate 1 index /CharProcs get /dieresis get exec -280 0 translate
    -9.76563e-05 0 translate 1 index /CharProcs get /O get exec 9.76563e-05 0 translate
  } bind def
  /multiply { 405 0 60 161 346 448 setcachedevice
    pop -1
    [ 0.707107 -0.707107 0.707107 0.707107 -199.713 243 ] concat 1 index /CharProcs get /plus get exec [ 0.707107 0.707107 -0.707107 0.707107 313.045 -30.6085 ] concat 
  } bind def
  /Ugrave { dup -1 ne { 822 0 40 -50 780 1022 setcachedevice } if
    pop -1
    225.75 0 translate 1 index /CharProcs get /grave get exec -225.75 0 translate
    0.000390625 0 translate 1 index /CharProcs get /U get exec -0.000390625 0 translate
  } bind def
  /Uacute { dup -1 ne { 822 0 40 -50 780 1021 setcachedevice } if
    pop -1
    223.75 0 translate 1 index /CharProcs get /acute get exec -223.75 0 translate
    0.000390625 0 translate 1 index /CharProcs get /U get exec -0.000390625 0 translate
  } bind def
  /Ucircumflex { dup -1 ne { 822 0 40 -50 780 1022 setcachedevice } if
    pop -1
    147.75 0 translate 1 index /CharProcs get /asciicircum get exec -147.75 0 translate
    0.000390625 0 translate 1 index /CharProcs get /U get exec -0.000390625 0 translate
  } bind def
  /Udieresis { dup -1 ne { 820 0 40 -50 780 915 setcachedevice } if
    pop -1
    223 0 translate 1 index /CharProcs get /dieresis get exec -223 0 translate
    3.90625e-05 0 translate 1 index /CharProcs get /U get exec -3.90625e-05 0 translate
  } bind def
  /Yacute { dup -1 ne { 639 0 -20 -50 659 1021 setcachedevice } if
    pop -1
    143.9 0 translate 1 index /CharProcs get /acute get exec -143.9 0 translate
    1 index /CharProcs get /Y get exec
  } bind def
  /Oslash { dup -1 ne { 940 0 20 -50 920 850 setcachedevice } if
	605 800 moveto
	 350 0 lineto
	470 0 moveto
	 249 0 70 179 70 400 curveto
	 70 621 249 800 470 800 curveto
	 691 800 870 621 870 400 curveto
	 870 179 691 0 470 0 curveto
	closepath
  } bind def
  /Eth { dup -1 ne { 801 0 -51 -50 782 850 setcachedevice } if
	-0.5 400 moveto
	 262.5 400 lineto
	132.5 0 moveto
	 132.5 800 lineto
	 332.5 800 lineto
	 434.5 800 536.5 761 614.5 683 curveto
	 770.5 527 770.5 273 614.5 117 curveto
	 536.5 39 432.5 0 331.5 0 curveto
	 132.5 0 lineto
	closepath
  } bind def
  /AE { dup -1 ne { 1052 0 -9 -50 997 850 setcachedevice } if
	507 400 moveto
	 867 400 lineto
	507 400 moveto
	 867 400 lineto
	947 800 moveto
	 507 800 lineto
	 507 0 lineto
	 947 0 lineto
	507 800 moveto
	 41 0 lineto
	201 274 moveto
	 507 272 lineto
  } bind def
  /plusminus { 483 0 60 78 423 510 setcachedevice
    pop -1
    0 -200 translate 1 index /CharProcs get /hyphen get exec 0 200 translate
    1 index /CharProcs get /plus get exec
  } bind def
  /agrave { 617 0 -20 -50 637 1022 setcachedevice
    pop -1
    1 index /CharProcs get /Agrave get exec
  } bind def
  /aacute { 617 0 -20 -50 637 1021 setcachedevice
    pop -1
    1 index /CharProcs get /Aacute get exec
  } bind def
  /acircumflex { 617 0 -20 -50 637 1022 setcachedevice
    pop -1
    1 index /CharProcs get /Acircumflex get exec
  } bind def
  /atilde { 617 0 -20 -50 637 964 setcachedevice
    pop -1
    1 index /CharProcs get /Atilde get exec
  } bind def
  /adieresis { 617 0 -20 -50 637 915 setcachedevice
    pop -1
    1 index /CharProcs get /Adieresis get exec
  } bind def
  /aring { 617 0 -20 -50 637 1108 setcachedevice
    pop -1
    1 index /CharProcs get /Aring get exec
  } bind def
  /ae { 1052 0 -9 -50 997 850 setcachedevice
    pop -1
    1 index /CharProcs get /AE get exec
  } bind def
  /ccedilla { 707 0 40 -201 687 850 setcachedevice
    pop -1
    1 index /CharProcs get /Ccedilla get exec
  } bind def
  /egrave { 610 0 60 -50 600 1022 setcachedevice
    pop -1
    1 index /CharProcs get /Egrave get exec
  } bind def
  /eacute { 610 0 60 -50 600 1021 setcachedevice
    pop -1
    1 index /CharProcs get /Eacute get exec
  } bind def
  /ecircumflex { 610 0 60 -50 600 1022 setcachedevice
    pop -1
    1 index /CharProcs get /Ecircumflex get exec
  } bind def
  /edieresis { 610 0 60 -50 600 913 setcachedevice
    pop -1
    1 index /CharProcs get /Edieresis get exec
  } bind def
  /igrave { 244 0 -5 -50 249 1022 setcachedevice
    pop -1
    1 index /CharProcs get /Igrave get exec
  } bind def
  /iacute { 244 0 -4 -50 248 1021 setcachedevice
    pop -1
    1 index /CharProcs get /Iacute get exec
  } bind def
  /icircumflex { 244 0 -81 -50 325 1022 setcachedevice
    pop -1
    1 index /CharProcs get /Icircumflex get exec
  } bind def
  /idieresis { 244 0 -5 -50 248 917 setcachedevice
    pop -1
    1 index /CharProcs get /Idieresis get exec
  } bind def
  /eth { 801 0 -51 -50 782 850 setcachedevice
    pop -1
    1 index /CharProcs get /Eth get exec
  } bind def
  /ntilde { 780 0 60 -50 720 964 setcachedevice
    pop -1
    1 index /CharProcs get /Ntilde get exec
  } bind def
  /ograve { 940 0 20 -50 920 1022 setcachedevice
    pop -1
    1 index /CharProcs get /Ograve get exec
  } bind def
  /oacute { 940 0 20 -50 920 1021 setcachedevice
    pop -1
    1 index /CharProcs get /Oacute get exec
  } bind def
  /ocircumflex { 940 0 20 -50 920 1022 setcachedevice
    pop -1
    1 index /CharProcs get /Ocircumflex get exec
  } bind def
  /otilde { 940 0 20 -50 920 964 setcachedevice
    pop -1
    1 index /CharProcs get /Otilde get exec
  } bind def
  /odieresis { 940 0 20 -50 920 915 setcachedevice
    pop -1
    1 index /CharProcs get /Odieresis get exec
  } bind def
  /oslash { 940 0 20 -50 920 850 setcachedevice
    pop -1
    1 index /CharProcs get /Oslash get exec
  } bind def
  /ugrave { 822 0 40 -50 780 1022 setcachedevice
    pop -1
    1 index /CharProcs get /Ugrave get exec
  } bind def
  /uacute { 822 0 40 -50 780 1021 setcachedevice
    pop -1
    1 index /CharProcs get /Uacute get exec
  } bind def
  /ucircumflex { 822 0 40 -50 780 1022 setcachedevice
    pop -1
    1 index /CharProcs get /Ucircumflex get exec
  } bind def
  /udieresis { 820 0 40 -50 780 915 setcachedevice
    pop -1
    1 index /CharProcs get /Udieresis get exec
  } bind def
  /yacute { 639 0 -20 -50 659 1021 setcachedevice
    pop -1
    1 index /CharProcs get /Yacute get exec
  } bind def
  /ydieresis { 639 0 -20 -50 659 915 setcachedevice
    pop -1
    130 0 translate 1 index /CharProcs get /dieresis get exec -130 0 translate
    0.000234375 0 translate 1 index /CharProcs get /Y get exec -0.000234375 0 translate
  } bind def
  /uni007F { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0080 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0081 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0082 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0083 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0084 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0085 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0086 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0087 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0088 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0089 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni008A { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni008B { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni008C { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni008D { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni008E { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni008F { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0090 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0091 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0092 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0093 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0094 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0095 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0096 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0097 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0098 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni0099 { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni009A { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni009B { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni009C { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni009D { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni009E { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /uni009F { 1264 0 0 0 0 0 setcachedevice
  } bind def
  /cent { 707 0 40 -113 687 914 setcachedevice
	411 1 moveto
	 411 -63 lineto
	411 864 moveto
	 411 800 lineto
	637 94 moveto
	 579 36 500 0 411 0 curveto
	 234 0 90 143 90 320 curveto
	 90 480 lineto
	 90 657 234 800 411 800 curveto
	 500 800 579 764 637 706 curveto
  } bind def
  /sterling { 517 0 -50 -50 565 850 setcachedevice
	44 366 moveto
	 442 366 lineto
	0 0 moveto
	 515 0 lineto
	425 703 moveto
	 417 722 405 739 390 753 curveto
	 361 782 320 800 276 800 curveto
	 186 800 114 728 114 638 curveto
	 114 0 lineto
  } bind def
  /currency { 120 0 0 0 0 0 setcachedevice
  } bind def
  /yen { 639 0 -20 -50 659 850 setcachedevice
	115 366 moveto
	 513 366 lineto
    pop -1
    1 index /CharProcs get /Y get exec
  } bind def
  /brokenbar { 220 0 60 -250 160 850 setcachedevice
	110 800 moveto
	 110 -200 lineto
  } bind def
  /section { 520 0 20 -115 500 917 setcachedevice
	70 56 moveto
	 80 32 94 11 112 -7 curveto
	 148 -43 198 -65 253 -65 curveto
	 362 -65 450 24 450 133 curveto
	 450 187 429.769 244.057 379 281 curveto
	 155 444 lineto
	 118 471 88 528 88 573 curveto
	 88 662 160 735 250 735 curveto
	 294 735 335 717 364 688 curveto
	 379 674 391 657 399 638 curveto
	70 188 moveto
	 80 164 94 143 112 125 curveto
	 148 89 198 67 253 67 curveto
	 362 67 450 156 450 265 curveto
	 450 319 429.769 376.057 379 413 curveto
	 155 576 lineto
	 118 603 88 660 88 705 curveto
	 88 794 160 867 250 867 curveto
	 294 867 335 849 364 820 curveto
	 379 806 391 789 399 770 curveto
  } bind def
  /copyright { 707 0 40 -113 687 914 setcachedevice
	411 1 moveto
	 411 -63 lineto
	411 864 moveto
	 411 800 lineto
	637 94 moveto
	 579 36 500 0 411 0 curveto
	 234 0 90 143 90 320 curveto
	 90 480 lineto
	 90 657 234 800 411 800 curveto
	 500 800 579 764 637 706 curveto
  } bind def
  /ordfeminine { 617 0 -20 -50 637 850 setcachedevice
	587 0 moveto
	 478 312 308 800 308 800 curveto
	308 800 moveto
	 30 0 lineto
	125 272 moveto
	 492 272 lineto
  } bind def
  /logicalnot { 483 0 60 205 423 378 setcachedevice
	373 328 moveto
	 373 255 lineto
	110 328 moveto
	 373 328 lineto
  } bind def
  /registered { 580 0 59 -114 560 916 setcachedevice
	287 866 moveto
	 287 802 lineto
	287 0 moveto
	 287 -64 lineto
	489.991 0 moveto
	 288.991 400 lineto
	109.991 0 moveto
	 109.991 800 lineto
	 311.991 800 lineto
	 422.991 800 511 709 509.991 598 curveto
	 508.991 488 419.991 400 309.991 400 curveto
	 109.991 400 lineto
  } bind def
  /macron { 483 0 60 816 423 916 setcachedevice
	110 866 moveto
	 373 866 lineto
  } bind def
  /uni00B2 { 550 0 26 -50 516 850 setcachedevice
	128 703 moveto
	 136 722 148 739 163 753 curveto
	 192 782 232 800 276 800 curveto
	 365 800 439 728 439 638 curveto
	 439 616 431 590 419 567 curveto
	 76 0 lineto
	 466 0 lineto
  } bind def
  /uni00B3 { 550 0 5 -50 545 850 setcachedevice
	92 622 moveto
	 93 720 173 800 272 800 curveto
	 371 800 452 719 452 620 curveto
	 452 521 372.005 439 272 439 curveto
	272 439 moveto
	 393.037 439 495 338 495 218 curveto
	 495 97 396 0 275 0 curveto
	 153 0 55 97 55 218 curveto
  } bind def
  /mu { 820 0 40 -50 780 850 setcachedevice
    pop -1
    1 index /CharProcs get /U get exec
  } bind def
  /paragraph { 638 0 59 -50 639 850 setcachedevice
	466 0 moveto
	 466 800 lineto
	588.007 320 moveto
	 350.007 320 lineto
	 218.007 320 110.999 426 110.007 558 curveto
	 109.007 691 215.007 799 348.007 800 curveto
	 588.007 800 lineto
	 588.007 0 lineto
  } bind def
  /uni00B9 { 550 0 105 -50 385 850 setcachedevice
	335 0 moveto
	 335 800 lineto
	335 800 moveto
	 334 702 254 622 155 622 curveto
  } bind def
  /ordmasculine { 480 0 60 490 420 850 setcachedevice
	110 670 moveto
	 110 742 168 800 240 800 curveto
	 312 800 370 742 370 670 curveto
	 370 598 312 540 240 540 curveto
	 168 540 110 598 110 670 curveto
	closepath
  } bind def
  /onequarter { 550 0 -34 -50 575 850 setcachedevice
	376 800 moveto
	 16 228 lineto
	 525 228 lineto
	376 0 moveto
	 376 800 lineto
	265 0 moveto
	 265 800 lineto
	 264 702 184 622 85 622 curveto
  } bind def
  /onehalf { 550 0 26 -50 516 850 setcachedevice
	128 703 moveto
	 136 722 148 739 163 753 curveto
	 192 782 232 800 276 800 curveto
	 365 800 439 728 439 638 curveto
	 439 616 431 590 419 567 curveto
	 76 0 lineto
	 466 0 lineto
	335 0 moveto
	 335 800 lineto
	335 800 moveto
	 334 702 254 622 155 622 curveto
  } bind def
  /threequarters { 550 0 -34 -50 575 850 setcachedevice
	92 622 moveto
	 93 720 173 800 272 800 curveto
	 371 800 452 719 452 620 curveto
	 452 521 372.005 439 272 439 curveto
	272 439 moveto
	 393.037 439 495 338 495 218 curveto
	 495 97 396 0 275 0 curveto
	 153 0 55 97 55 218 curveto
	376 800 moveto
	 16 228 lineto
	 525 228 lineto
	376 0 moveto
	 376 800 lineto
  } bind def
  /Thorn { dup -1 ne { 638 0 60 -50 639 850 setcachedevice } if
	112 680 moveto
	 350 680 lineto
	 483 679 589 571 588 438 curveto
	 587.008 306 480 200 348 200 curveto
	 110 200 lineto
	110 800 moveto
	 110 0 lineto
  } bind def
  /germandbls { 720 0 20 -50 700 850 setcachedevice
	270 121 moveto
	 280 97 294 76 312 58 curveto
	 348 22 398 0 453 0 curveto
	 562 0 650 89 650 198 curveto
	 650 252 629.769 309.057 579 346 curveto
	 355 509 lineto
	 318 536 288 593 288 638 curveto
	 288 727 360 800 450 800 curveto
	 494 800 535 782 564 753 curveto
	 579 739 591 722 599 703 curveto
	70 121 moveto
	 80 97 94 76 112 58 curveto
	 148 22 198 0 253 0 curveto
	 362 0 450 89 450 198 curveto
	 450 252 429.769 309.057 379 346 curveto
	 155 509 lineto
	 118 536 88 593 88 638 curveto
	 88 727 160 800 250 800 curveto
	 294 800 335 782 364 753 curveto
	 379 739 391 722 399 703 curveto
  } bind def
  /divide { 475 0 60 -50 415 850 setcachedevice
	365 800 moveto
	 110 0 lineto
  } bind def
  /thorn { 638 0 60 -50 639 850 setcachedevice
    pop -1
    1 index /CharProcs get /Thorn get exec
  } bind def
end
currentdict end
/Belgika-Stroke exch definefont
